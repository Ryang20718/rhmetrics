<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .dashboard {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 20px;
        }
        .chart-container {
            width: 100%;
            height: 300px;
            margin-bottom: 20px;
        }
        .number-display {
            text-align: center;
            font-size: 24px;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <div class="chart-container">
            <canvas id="timeSeriesChart" width="400" height="300"></canvas>
        </div>
        <div class="chart-container">
            <canvas id="barChart" width="400" height="300"></canvas>
        </div>
        <div class="chart-container">
            <canvas id="YearEarningsByTag" width="400" height="300"></canvas>
        </div>
        <div class="chart-container">
            <canvas id="EarningsByTicker" width="400" height="300"></canvas>
        </div>
        <div class="number-display">
            <p>Number: <span id="numberDisplay">0</span></p>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Time Series Chart
            var timeSeriesCtx = document.getElementById('timeSeriesChart').getContext('2d');
            var timeSeriesChart = new Chart(timeSeriesCtx, {
                type: 'line',
                data: {
                    labels: {{.LabelsTimeSeries}},
                    datasets: [{
                        label: 'Realized Earnings By Year',
                        data: {{.DataTimeSeries}},
                        borderColor: 'rgb(75, 192, 192)',
                        borderWidth: 2,
                        fill: false,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });

            // Bar Chart
            var barChartCtx = document.getElementById('barChart').getContext('2d');
            var barChart = new Chart(barChartCtx, {
                type: 'bar',
                data: {
                    labels: ["Label1", "Label2", "Label3"],
                    datasets: [{
                        label: 'Earnings By Tag',
                        data: [5, 15, 10],
                        backgroundColor: 'rgb(255, 99, 132)',
                        borderWidth: 2,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: [{
                            stacked: true
                        }],
                        y: [{
                            stacked: true
                        }]
                    }
                }
            });

            var years = {{.LabelsYearsTag}}
            var tags = {{.LabelsTags}}
            var amounts = {{.DataAmount}}

            // Group data by Tag
            var groupedData = {};
            for (var i = 0; i < years.length; i++) {
                var year = years[i];
                var tag = tags[i];
                var amount = amounts[i];

                if (!groupedData[tag]) {
                    groupedData[tag] = { label: tag, data: Array(years.length).fill(0) };
                }

                groupedData[tag].data[years.indexOf(year)] += amount;
            }

            // Create datasets dynamically
            var datasets = Object.values(groupedData).map(item => ({
                label: item.label,
                data: item.data,
                backgroundColor: getRandomColor(),
                borderWidth: 1,
                stack: 'Stack 1' // You can adjust the stack name as needed
            }));

            // Chart configuration
            var barChartCtx = document.getElementById('YearEarningsByTag').getContext('2d');
            var barChart = new Chart(barChartCtx, {
                type: 'bar',
                data: {
                    labels: Array.from(new Set(years)).map(String), // Unique years
                    datasets: datasets
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: [{
                            stacked: true
                        }],
                        y: [{
                            stacked: true
                        }]
                    }
                }
            });


            var earningsLabelsByTicker = {{.DataLabelsByTicker}};
            var earningValsByTicker = {{.DataValByTicker}};

            // Create pie chart with dynamically generated colors
            var pieChartCtx = document.getElementById('EarningsByTicker').getContext('2d');
            var pieChart = new Chart(pieChartCtx, {
                type: 'pie',
                data: {
                    labels: earningsLabelsByTicker,
                    datasets: [{
                        data: earningValsByTicker,
                        backgroundColor: generateRandomColors(earningValsByTicker.length),
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });

            function generateRandomColors(count) {
                var colors = [];
                for (var i = 0; i < count; i++) {
                    colors.push(getRandomColor());
                }
                return colors;
            }


            // Function to generate random color
            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }

            // Number Display
            var numberDisplay = document.getElementById('numberDisplay');
            numberDisplay.innerText = 42; // Replace with your actual number data
        });
    </script>
</body>
</html>
